USE analytics;

SET @start_year := YEAR(CURDATE()) - 5;
SET @end_year := YEAR(CURDATE()) + 5;
SET @start_date := MAKEDATE(@start_year, 1);
SET @end_date := DATE_SUB(MAKEDATE(@end_year + 1, 1), INTERVAL 1 DAY);

DELETE FROM dim_date WHERE date BETWEEN @start_date AND @end_date;

INSERT INTO dim_date (date_sk, date, year, month, week, dow, is_weekend)
SELECT
  DATE_FORMAT(dt, '%Y%m%d') + 0 AS date_sk,
  dt AS date,
  YEAR(dt) AS year,
  MONTH(dt) AS month,
  WEEK(dt, 3) AS week,
  WEEKDAY(dt) + 1 AS dow,
  CASE WHEN WEEKDAY(dt) >= 5 THEN 1 ELSE 0 END AS is_weekend
FROM (
  SELECT DATE_ADD(@start_date, INTERVAL seq DAY) AS dt
  FROM (
    SELECT units.n + tens.n * 10 + hundreds.n * 100 + thousands.n * 1000 AS seq
    FROM (SELECT 0 n UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) units
    CROSS JOIN (SELECT 0 n UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) tens
    CROSS JOIN (SELECT 0 n UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) hundreds
    CROSS JOIN (SELECT 0 n UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8 UNION ALL SELECT 9) thousands
  ) sequences
) days
WHERE dt BETWEEN @start_date AND @end_date
ON DUPLICATE KEY UPDATE
  year = VALUES(year),
  month = VALUES(month),
  week = VALUES(week),
  dow = VALUES(dow),
  is_weekend = VALUES(is_weekend);
